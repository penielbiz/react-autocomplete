{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","users","setUsers","text","setText","suggestions","setSuggestions","useEffect","a","fetch","json","response","data","console","log","fetchData","className","type","value","style","marginTop","onChange","e","matches","length","filter","user","regexp","RegExp","email","match","onChangeHandler","target","onBlur","map","suggestion","index","onClick","onSuggestHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAAe,I,kBCgGAA,MA1Ff,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGyBJ,mBAAS,IAHlC,mBAGNK,EAHM,KAGOC,EAHP,KA4Db,OAvDAC,qBAAU,WA4BR,OAxBe,uCAAG,8BAAAC,EAAA,sEAERC,MAAM,+BAFE,8BAGdC,OAHc,OACVC,EADU,OAKVC,EAAOD,EAASC,KACtBC,QAAQC,IAAIF,GACZV,EAASU,GAPO,2CAAH,oDAUfG,GAcO,WAELb,EAAS,IACTI,EAAe,OAEhB,IAuBD,sBAAKU,UAAU,YAAf,UACE,uBACEC,KAAK,OACLC,MAAOf,EACPgB,MAAO,CAAEC,UAAW,QACpBJ,UAAU,kBACVK,SAAU,SAACC,GAAD,OA3BQ,SAACnB,GACvB,IAAIoB,EAAU,GAEVpB,EAAKqB,OAAS,IAChBD,EAAUtB,EAAMwB,QAAO,SAACC,GACtB,IAAMC,EAAS,IAAIC,OAAJ,UAAczB,GAAQ,MACrC,OAAOuB,EAAKG,MAAMC,MAAMH,OAI5Bd,QAAQC,IAAIS,GACZjB,EAAeiB,GACfnB,EAAQD,GAea4B,CAAgBT,EAAEU,OAAOd,QAC1Ce,OAAQ,eAMT5B,GACCA,EAAY6B,KAAI,SAACC,EAAYC,GAC3B,OACE,qBAEEpB,UAAU,iDACVqB,QAAS,kBAzBI,SAAClC,GACxBC,EAAQD,GACRG,EAAe,IAuBUgC,CAAiBH,EAAWN,QAH7C,SAKGM,EAAWN,OAJPO,UCxEJG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f9ee97da.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./custom.css\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n\n  useEffect(() => {\n    /**\n     * Fetch data using fetch.\n     */\n    const fetchData = async () => {\n      const response = await (\n        await fetch(\"https://reqres.in/api/users\")\n      ).json();\n      //const jsn = await response.json();\n      const data = response.data;\n      console.log(data);\n      setUsers(data);\n    };\n\n    fetchData();\n\n    /**\n     * Fetch data using axios\n     */\n    // const loadUsers = async () => {\n    //   const response = await axios.get(\"https://reqres.in/api/users\");\n    //   console.log(response.data.data);\n    //   setUsers(response.data.data);\n    // };\n\n    // loadUsers();\n\n    // componentWillUnmount()\n    return () => {\n      // cleanup.\n      setUsers([]);\n      setSuggestions([]);\n    };\n  }, []);\n\n  const onChangeHandler = (text) => {\n    let matches = [];\n\n    if (text.length > 0) {\n      matches = users.filter((user) => {\n        const regexp = new RegExp(`${text}`, \"gi\");\n        return user.email.match(regexp);\n      });\n    }\n\n    console.log(matches);\n    setSuggestions(matches);\n    setText(text);\n  };\n\n  const onSuggestHandler = (text) => {\n    setText(text);\n    setSuggestions([]);\n  };\n\n  return (\n    <div className=\"container\">\n      <input\n        type=\"text\"\n        value={text}\n        style={{ marginTop: \"10px\" }}\n        className=\"col-md-12 input\"\n        onChange={(e) => onChangeHandler(e.target.value)}\n        onBlur={() => {\n          // setTimeout(() => {\n          //   setSuggestions([]);\n          // }, 100);\n        }}\n      />\n      {suggestions &&\n        suggestions.map((suggestion, index) => {\n          return (\n            <div\n              key={index}\n              className=\"suggestion col-md-12 justify-content-md-center\"\n              onClick={() => onSuggestHandler(suggestion.email)}\n            >\n              {suggestion.email}\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}